const fs = require('fs');
const rl = require('readline-sync');
const chalk = require('chalk');

// –¢–µ–º—ã
function topic() {
  const topics = fs.readdirSync('./topics', 'utf-8');
  const arr = topics.map((el) =>
    fs.readFileSync(`./topics/${el}`, 'utf-8').split('\n')
  );
  const top = arr.map((el) => el[0]);
  return top.join(',\n').replace(/,/g, '');
}

// –ù–∞—á–∞–ª–æ –∏–≥—Ä—ã
console.log(chalk.red('üî•üî•üî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É! üî•üî•üî•'));
const userName = rl.question(chalk.yellow('üå∏ –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? '));
console.log(`–ü—Ä–∏–≤–µ—Ç ${chalk.blue(userName)}! –í—ã–±–µ—Ä–∏ —Ç–µ–º—É:`);
const chooseTopic = rl.question(
  `${chalk.green(topic())}\n${chalk.magenta('==>üêæ ')}`
);

// –í–æ–ø—Ä–æ—Å—ã
function getQuestions() {
  let quest = [];
  const topics = fs.readdirSync('./topics', 'utf-8');
  const arr = topics.map((el) =>
    fs.readFileSync(`./topics/${el}`, 'utf-8').split('\n')
  );
  const num = arr.map((el, i) => el[0][0]);

  for (let i = 0; i < arr.length; i += 1) {
    if (chooseTopic === num[i]) {
      const ask = arr[i];
      quest.push(ask.filter((el, i) => !((i + 1) % 3)));
      return quest.flat();
    }
  }
}

// –û—Ç–≤–µ—Ç—ã
function getAnswers() {
  let answ = [];
  const topics = fs.readdirSync('./topics', 'utf-8');
  const arr = topics.map((el) =>
    fs.readFileSync(`./topics/${el}`, 'utf-8').split('\n')
  );
  const num = arr.map((el, i) => el[0][0]);

  for (let i = 0; i < arr.length; i += 1) {
    if (chooseTopic === num[i]) {
      const ask = arr[i];
      answ.push(ask.filter((el, i) => !(i % 3)));
      return answ.flat().slice(1);
    }
  }
}

// –ò–≥—Ä–∞
let count = 0;
function quiz(question, answer) {
  const userAnswer = rl.question(question);

  if (userAnswer.toLowerCase() === answer.toLowerCase()) {
    console.log(chalk.green('\n–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! üò∫'));
    count += 10;
  } else {
    console.log(chalk.red('\n–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π! üòø'));
    console.log(`${chalk.blue('–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:')} ${chalk.magenta(answer)}`);
    count -= 5;
  }
  console.log(`–í–∞—à —Å—á–µ—Ç: ${chalk.yellow(count)} –±–∞–ª–ª–æ–≤!`);
}

const questions = getQuestions();
const answers = getAnswers();

for (let i = 0; i < questions.length; i += 1) {
  quiz(
    `${chalk.bgMagenta('\n–í–æ–ø—Ä–æ—Å:')} ${chalk.cyan(questions[i])}\n`,
    answers[i]
  );
}

console.log(
  `${chalk.bgMagenta('\nüíû–ò–≥—Ä–∞ –ø–æ–¥–æ—à–ª–∞ –∫ –∫–æ–Ω—Ü—É!üíû')} \nüéà–í–∞—à —Å—á–µ—Ç: ${chalk.blue(
    count
  )} –±–∞–ª–ª–æ–≤!üéà`
);
