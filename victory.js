const fs = require("fs");
const readlineSync = require("readline-sync");
const chalk = require("chalk");
function getUserName() {
  console.clear();
  console.log(
    `‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§ ${chalk.green(
      "–ü—Ä–∏–≤–µ—Ç –∏–≥—Ä–æ–∫! üñê"
    )} ‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§
    `
  );
  console.log(
    "            –ú—ã –ï–∂–∏ –∏ —Ö–æ—Ç–∏–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å—ã–≥—Ä–∞—Ç—å —Ç–µ–±–µ –≤ –∏–≥—Ä—É!              "
  );
  console.log("                           –ù–∞–∑–æ–≤–∏ —Å–≤–æ–µ –∏–º—è:                  ");
  return readlineSync.question(chalk.magenta("===>"));
}

const userName = getUserName();

function getNumberOfQweze() {
  const namesOfFiles = fs.readdirSync("./topics");
  let questionList = "";
  namesOfFiles.map(
    (el) =>
      (questionList += `                              ${
        fs.readFileSync(`./topics/${el}`, "utf-8").split("\n")[0]
      }\n`)
  );
  console.clear();
  console.log(
    `‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§ ${chalk.yellow(`${userName}, –≤—ã–±–µ—Ä–∏ —Ç–µ–º—É:`)}  ‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§`);
  console.log(chalk.cyan(questionList));
  return readlineSync.question(chalk.magenta("===>"));
}

function quezeReader() {
  const quezeNum = getNumberOfQweze();
  const quezeFilesNames = fs.readdirSync("./topics");
  return fs.readFileSync(`./topics/${quezeFilesNames[quezeNum - 1]}`, "utf-8");
}

function runner() {
  console.log(`–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è ${userName}!`);
  const questionList = quezeReader().split("\n").slice(1);
  let counter = 0;
  for (let i = 0; i < questionList.length; i += 2) {
    // console.clear();
    console.log(chalk.bgGreen(`                               ${questionList[i]}                                            `));
    answer = readlineSync.question(chalk.magenta("===>"));
    if (answer.toLowerCase() === questionList[i + 1].toLowerCase()) {
      counter += 10;
      console.log(chalk.yellow(`                               –í–µ—Ä–Ω–æ! –¢–≤–æ–∏ –±–∞–ª–ª—ã: ${counter}                                            `));
    } else console.log(chalk.red(`                               –ù–µ–≤–µ—Ä–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${questionList[i + 1]}                                            `));
  }
  console.log(
    chalk.bgMagenta(`                               –ö–≤–∏–∑ –æ–∫–æ–Ω—á–µ–Ω! –¢—ã –Ω–∞–±—Ä–∞–ª(–∞) ${counter} –±–∞–ª–ª–æ–≤! –•–æ—á–µ—à—å –ø–æ–≤—Ç–æ—Ä–∏—Ç—å?                                            `
  ));
  const repeatAnswer = readlineSync.question(chalk.magenta("===>"));
  if (repeatAnswer.toLowerCase() === "–¥–∞") return runner();
  return chalk.red("                               –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!                               ");
}

console.log(runner());
